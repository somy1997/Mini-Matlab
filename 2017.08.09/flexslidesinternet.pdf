%PDF-1.2 %‚„œ”
 10 0 obj<</Length 11 0 R>>stream
1 1 1 rg 36 35.52 540.48 720.48 re fBT43.2 740.64  TD0 0 0 rg /F0 12  Tf-0.0312  Tc -0.0888  Tw (cs 445 ) Tj33.6 0  TD -0.156  Tc 0  Tw (-) Tj6.72 0  TD 0.0114  Tc -0.1314  Tw (System Program Design) Tj431.52 0  TD -0.0432  Tc 0  Tw (03/26/2002) Tj-471.84 -698.4  TD 0.0369  Tc -0.1569  Tw (John Dickinson) Tj520.32 0  TD 0.24  Tc 0  Tw (1) TjET1 1 1 rg 79.2 525.6 211.2 158.4 re fBT138.24 651.84  TD0 0 0 rg /F1 12.96  Tf-0.0532  Tc 0.2903  Tw (Features in Flex) Tj-41.28 -24  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj8.16 0  TD -0.137  Tc -0.1318  Tw (Start conditions) Tj-8.16 -13.44  TD 0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1288  Tc 0.34  Tw (Values available to the user) Tj-8.16 -13.44  TD 0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1317  Tc 0.3429  Tw (C++ lexical analyzer) Tj-8.16 -13.44  TD 0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1261  Tc -0.1427  Tw (Interfacing with ) Tj65.76 0  TD -0.0144  Tc 0  Tw (yacc) TjETq 1 0 0 1 1.28 1.88 cm 79.2 525.6 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 79.68 526.08 210.24 157.44 re S Q 1 1 1 rg 322.08 525.6 211.2 158.4 re fBT382.56 651.84  TD0 0 0 rg /F1 12.96  Tf-0.0825  Tc 0.3196  Tw (Start conditions) Tj-42.72 -24  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj13.92 0  TD -0.1421  Tc 0.3533  Tw (flex provides a mechanism for ) Tj0 -11.52  TD -0.1176  Tc 0.3288  Tw (conditionally activating rules) Tj-13.92 -13.44  TD 0  Tc 0  Tw (\225) Tj13.92 0  TD -0.16  Tc 0.2341  Tw (Any rule whose pattern is prefixed with ) Tj0 -11.04  TD -0.1337  Tc 0.1392  Tw ("<sc>" will only be active when the ) Tj0 -11.52  TD -0.1603  Tc 0.3029  Tw (scanner is in the start condition named ) Tj0 -11.04  TD -0.016  Tc 0  Tw ("sc) Tj12.96 0  TD 0.1632  Tc (\223) TjETq 1 0 0 1 6.34 1.88 cm 322.08 525.6 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 322.56 526.08 210.24 157.44 re S Q 1 1 1 rg 79.2 316.8 211.2 158.4 re fBT117.12 443.04  TD0 0 0 rg /F1 12.96  Tf-0.0483  Tc 0.0454  Tw (Start condition example) Tj-20.16 -18.24  TD 1 0.2 0.6 rg /F2 7.2  Tf-0.0499  Tc -0.1384  Tw (<STRING>[^"]* { /* eat up the string body */ ) Tj0 -10.08  TD -0.0414  Tc -0.0402  Tw (... }) Tj8.16 -12.96  TD 0 0 0 rg /F1 7.2  Tf-0.0726  Tc -0.009  Tw (will be active only when the scanner is in the ) Tj0 -9.12  TD -0.0987  Tc 0.0171  Tw ("STRING" start condition) Tj-8.16 -23.52  TD 1 0.2 0.6 rg /F2 7.2  Tf-0.0735  Tc 0  Tw (<INITIAL,STRING,QUOTE>) Tj88.8 0  TD -0.0816  Tc (\\) Tj1.92 0  TD -0.0415  Tc -0.1087  Tw (. { /* handle an escape */ ) Tj-90.72 -10.08  TD -0.0414  Tc -0.0402  Tw (... }) Tj8.16 -10.08  TD 0 0 0 rg /F1 7.2  Tf-0.0689  Tc 0.0353  Tw (will be active only when the current start condition is ) Tj0 -11.04  TD -0.0846  Tc 0.003  Tw (either "INITIAL", "STRING", or "QUOTE".) TjETq 1 0 0 1 1.28 6.23 cm 79.2 316.8 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 79.68 317.28 210.24 157.44 re S Q 1 1 1 rg 322.08 316.8 211.2 158.4 re fBT352.32 443.04  TD0 0 0 rg /F1 12.96  Tf-0.0026  Tc -0  Tw (Start condition declaration) Tj-12.48 -23.04  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj13.92 0  TD -0.1121  Tc 0.0833  Tw (Start conditions are declared in the ) Tj0 -10.08  TD -0.1341  Tc 0.3453  Tw (definitions \(first\) section of the input ) TjT* -0.2688  Tc 0  Tw (using) Tj24.96 0  TD -0.0941  Tc (unindented) Tj49.44 0  TD -0.1707  Tc 0.0619  Tw (lines beginning with ) Tj-74.4 -10.08  TD -0.1315  Tc 0.1827  Tw (either `%s' or `%x' followed by a list of ) Tj0 -10.08  TD -0.1939  Tc 0  Tw (names) Tj-3.36 -11.04  TD /F1 8.16  Tf-0.217  Tc (\226) Tj12.48 0  TD -0.0133  Tc 0.0248  Tw (The former \(%s\) declares ) Tj94.56 0  TD /F3 8.16  Tf0.0438  Tc 0  Tw (inclusive) Tj34.08 0  TD /F1 8.16  Tf-0.0062  Tc -0.3422  Tw (start ) Tj-128.64 -8.64  TD -0.0256  Tc 0  Tw (conditions) Tj-12.48 -11.04  TD -0.217  Tc (\226) Tj12.48 0  TD -0.0137  Tc 0.0252  Tw (the latter \(%x\) declares ) Tj86.88 0  TD /F3 8.16  Tf0.0051  Tc 0  Tw (exclusive) Tj36 0  TD /F1 8.16  Tf-0.0062  Tc -0.3422  Tw (start ) Tj-122.88 -8.64  TD -0.0256  Tc 0  Tw (conditions) TjETq 1 0 0 1 6.34 6.23 cm 322.08 316.8 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 322.56 317.28 210.24 157.44 re S Q 1 1 1 rg 79.2 108 211.2 158.4 re fBT156 234.24  TD0 0 0 rg /F1 12.96  Tf0.0458  Tc (Activation) Tj-59.04 -22.56  TD /F1 8.16  Tf0.024  Tc (\225) Tj8.16 0  TD -0.0358  Tc 0.1673  Tw (A start condition is activated using the BEGIN ) Tj0 -10.08  TD 0.0515  Tc 0  Tw (action) Tj-8.16 -11.52  TD 0.024  Tc (\225) Tj8.16 0  TD -0.035  Tc 0.2265  Tw (Until the next BEGIN action is executed, rules ) Tj0 -10.08  TD -0.0314  Tc 0.223  Tw (with the given start condition will be active ) TjT* -0.0412  Tc 0.2927  Tw (and rules with other start conditions will be ) Tj0 -9.6  TD -0.0378  Tc 0  Tw (inactive) Tj-8.16 -12  TD 0.024  Tc (\225) Tj8.16 0  TD -0.0104  Tc 0.0459  Tw (If the start condition is ) Tj82.08 0  TD /F3 8.16  Tf-0.0095  Tc 0  Tw (inclusive) Tj31.2 0  TD /F1 8.16  Tf0.0169  Tc -0.0454  Tw (, then rules ) Tj-113.28 -9.6  TD -0.0745  Tc 0.4193  Tw (with no start conditions at all will also be ) Tj0 -10.08  TD -0.0323  Tc 0  Tw (active) TjETq 1 0 0 1 1.28 10.58 cm 79.2 107.52 211.2 158.88 re h W n 0.96 w 1 j 0 0 0 RG 79.68 108 210.24 157.92 re S Q 1 1 1 rg 322.08 108 211.2 158.4 re fBT400.32 234.24  TD0 0 0 rg /F1 12.96  Tf-0.0545  Tc (Exclusive) Tj-60.48 -21.6  TD /F1 8.16  Tf0.024  Tc (\225) Tj8.16 0  TD -0.0181  Tc -0.0104  Tw (If it is ) Tj21.6 0  TD /F3 8.16  Tf0.0051  Tc 0  Tw (exclusive) Tj33.6 0  TD /F1 8.16  Tf-0.0776  Tc -0.0309  Tw (, then ) Tj22.56 0  TD /F3 8.16  Tf0.0986  Tc 0  Tw (only) Tj17.76 0  TD /F1 8.16  Tf-0.0366  Tc 0.1681  Tw (rules qualified with ) Tj-95.52 -9.12  TD -0.027  Tc 0.2545  Tw (the start condition will be active) Tj-8.16 -10.56  TD 0.024  Tc 0  Tw (\225) Tj8.16 0  TD -0.0091  Tc 0.0807  Tw (A set of rules contingent on the same ) Tj0 -9.12  TD 0.0103  Tc 0.1213  Tw (exclusive start condition describe a scanner ) Tj0 -8.64  TD -0.0034  Tc 0.0815  Tw (which is independent of any of the other rules ) Tj0 -9.12  TD -0.0399  Tc 0.1714  Tw (in the flex input) Tj2.4 -9.6  TD /F1 7.2  Tf-0.1632  Tc 0  Tw (\226) Tj6.72 0  TD -0.0649  Tc -0.0167  Tw (Because of this, exclusive start conditions make it ) Tj0 -7.68  TD -0.0717  Tc -0.0099  Tw (easy to specify "mini) Tj63.84 0  TD 0.0024  Tc 0  Tw (-) Tj2.4 0  TD -0.0587  Tc -0.0229  Tw (scanners" which scan ) Tj-66.24 -7.68  TD -0.0814  Tc 0.0598  Tw (portions of the input that are syntactically different ) Tj0 -7.68  TD -0.0602  Tc -0.0214  Tw (from the rest \(e.g., comments\). ) TjETq 1 0 0 1 6.34 10.58 cm 322.08 107.52 211.2 158.88 re h W n 0.96 w 1 j 0 0 0 RG 322.56 108 210.24 157.92 re S Q endstreamendobj11 0 obj6780endobj4 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F1 8 0 R /F2 12 0 R /F3 14 0 R >>/ProcSet 2 0 R>>/Contents 10 0 R>>endobj17 0 obj<</Length 18 0 R>>stream
1 1 1 rg 36 35.52 540.48 720.48 re fBT43.2 740.64  TD0 0 0 rg /F0 12  Tf-0.0312  Tc -0.0888  Tw (cs 445 ) Tj33.6 0  TD -0.156  Tc 0  Tw (-) Tj6.72 0  TD 0.0114  Tc -0.1314  Tw (System Program Design) Tj431.52 0  TD -0.0432  Tc 0  Tw (03/26/2002) Tj-471.84 -698.4  TD 0.0369  Tc -0.1569  Tw (John Dickinson) Tj520.32 0  TD 0.24  Tc 0  Tw (2) TjET1 1 1 rg 79.2 525.6 211.2 158.4 re fBT144 651.84  TD0 0 0 rg /F1 12.96  Tf-0.0758  Tc 0.313  Tw (Little Example) Tj-47.04 -24  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1264  Tc 0.2691  Tw (Part of a flex file with start conditions:) Tj0 -24  TD /F1 7.2  Tf-0.1344  Tc 0.0528  Tw (%x example) Tj118.56 0  TD 1 0.2 0.6 rg -0.0758  Tc -0.0058  Tw (declares example) Tj-118.56 -10.08  TD 0 0 0 rg -0.1608  Tc 0  Tw (%%) Tj0 -10.08  TD -0.1176  Tc (<example>) Tj35.04 0  TD -0.136  Tc (foo) Tj20.16 0  TD -0.076  Tc (do_something\(\);) Tj63.36 0  TD 1 0.2 0.6 rg -0.0814  Tc -0  Tw (only rule used) Tj-118.56 -10.56  TD 0 0 0 rg -0.108  Tc 0  Tw (bar) Tj55.2 0  TD -0.0623  Tc -0.0193  Tw (something_else\(\); ) Tj-55.2 -10.08  TD 0.0024  Tc 0  Tw (\223) Tj2.4 0  TD 0.1152  Tc (==) Tj8.64 0  TD 0.0024  Tc (\223) Tj44.16 0  TD -0.1128  Tc (BEGIN\(example\);) Tj63.36 0  TD 1 0.2 0.6 rg -0.0863  Tc 0.0046  Tw (activates example) Tj-118.56 -10.08  TD 0 0 0 rg -0.1608  Tc 0  Tw (%%) TjETq 1 0 0 1 1.28 1.88 cm 79.2 525.6 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 79.68 526.08 210.24 157.44 re S Q 1 1 1 rg 322.08 525.6 211.2 158.4 re fBT348.48 651.84  TD0 0 0 rg /F1 12.96  Tf-0.0666  Tc 0.3037  Tw (Controlling Start Conditions) Tj-8.64 -23.04  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1667  Tc 0.2407  Tw (Once activated, a start condition is in ) Tj0 -10.08  TD -0.1384  Tc 0.3496  Tw (effect until another start condition is ) TjT* -0.0555  Tc 0  Tw (activated) Tj2.4 -11.04  TD /F1 8.16  Tf-0.217  Tc (\226) Tj6.72 0  TD -0.027  Tc 0.2652  Tw (So how do we get back to our initial state?) Tj-17.28 -12  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1212  Tc 0.1404  Tw (BEGIN\(INITIAL\) or BEGIN\(0\) reset the ) Tj0 -10.08  TD -0.0997  Tc 0.2309  Tw (start condition back to the original state) Tj-8.16 -12.48  TD 0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1604  Tc 0.3116  Tw (Also <*> can be used as a start ) Tj0 -10.08  TD -0.1402  Tc 0.2714  Tw (condition that will match any start ) TjT* -0.1088  Tc 0  Tw (condition) TjETq 1 0 0 1 6.34 1.88 cm 322.08 525.6 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 322.56 526.08 210.24 157.44 re S Q 1 1 1 rg 79.2 316.8 211.2 158.4 re fBT125.28 443.04  TD0 0 0 rg /F1 12.96  Tf-0.0496  Tc 0.0468  Tw (C comment example) Tj-36.96 -20.16  TD /F1 5.76  Tf-0.096  Tc 0  Tw (\225) Tj8.16 0  TD 0.0942  Tc -0.3034  Tw (Here is a scanner which recognizes \(and discards\) C comments whi) Tj176.64 0  TD 0.1594  Tc 0.1594  Tw (le ) Tj-176.64 -7.2  TD 0.0872  Tc -0.2484  Tw (maintaining a count of the current input line) Tj-8.16 -16.8  TD 0.1594  Tc -0.3206  Tw (%x comment) Tj0 -8.64  TD 0.1594  Tc 0  Tw (%%) Tj8.16 -8.16  TD 0.2125  Tc (int) Tj7.68 0  TD 0.144  Tc -0.3053  Tw (line_num = 1;) Tj-15.84 -8.64  TD -0.0629  Tc -0.0984  Tw ("/*" ) Tj63.36 0  TD 0.0635  Tc 0  Tw (BEGIN\(comment\);) Tj-63.36 -8.16  TD 0  Tc (<comment>[^*) Tj37.44 0  TD -0.1613  Tc (\\) Tj1.44 0  TD 0.0518  Tc 0.2669  Tw (n]* ) Tj24.48 0  TD 0.0864  Tc -0.2477  Tw (/* eat anything that's not a '*' */) Tj-63.36 -8.64  TD 0.0417  Tc 0  Tw (<comment>"*"+[^*/) Tj48.48 0  TD -0.1613  Tc (\\) Tj1.44 0  TD 0.2118  Tc 0.1069  Tw (n]* ) Tj13.44 0  TD 0.1028  Tc -0.2641  Tw (/* eat up '*'s not followed by '/'s */) Tj-63.36 -8.64  TD 0.0875  Tc 0  Tw (<comment>) Tj31.2 0  TD -0.1613  Tc (\\) Tj1.44 0  TD 0.1574  Tc 0.1613  Tw (n ) Tj30.72 0  TD 0.1293  Tc 0  Tw (++line_num;) Tj-63.36 -8.16  TD 0.0176  Tc -0.1789  Tw (<comment>"*"+"/" ) Tj63.36 0  TD 0.0207  Tc 0  Tw (BEGIN\(INITIAL\);) TjETq 1 0 0 1 1.28 6.23 cm 79.2 316.8 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 79.68 317.28 210.24 157.44 re S Q 1 1 1 rg 322.08 316.8 211.2 158.4 re fBT365.28 443.04  TD0 0 0 rg /F0 12.96  Tf-0.01  Tc -0.03  Tw (Values available to user) Tj-25.44 -21.6  TD /F1 7.2  Tf-0.12  Tc 0  Tw (\225) Tj8.16 0  TD -0.0272  Tc -0.0544  Tw (\221char *) Tj20.16 0  TD -0.1721  Tc 0  Tw (yytext\222) Tj21.12 0  TD -0.0605  Tc -0.0211  Tw (holds the text of the current token. ) Tj-49.44 -10.08  TD -0.12  Tc 0  Tw (\225) Tj8.16 0  TD -0.1584  Tc (\221) Tj1.44 0  TD -0.025  Tc -0.0566  Tw (int yyleng\222) Tj33.12 0  TD -0.0969  Tc 0.1524  Tw (holds the length of the current token. ) Tj-42.72 -10.08  TD -0.12  Tc 0  Tw (\225) Tj8.16 0  TD -0.1476  Tc 0.066  Tw (\221FILE *) Tj20.64 0  TD -0.096  Tc 0  Tw (yyin\222) Tj16.32 0  TD -0.053  Tc -0.0286  Tw (is the file which by default flex reads from. ) Tj-45.12 -10.08  TD -0.12  Tc 0  Tw (\225) Tj8.16 0  TD -0.1766  Tc 0.095  Tw (\221void ) Tj16.32 0  TD -0.0805  Tc 0  Tw (yyrestart) Tj26.88 0  TD -0.0717  Tc -0.0099  Tw (\( FILE *new_file \)\222 may be called to point) Tj-43.2 -8.64  TD -0.2004  Tc 0  Tw (yyin) Tj13.92 0  TD -0.0461  Tc -0.0355  Tw (at the new input file. ) Tj-22.08 -10.08  TD -0.12  Tc 0  Tw (\225) Tj8.16 0  TD -0.1476  Tc 0.066  Tw (\221FILE *) Tj20.64 0  TD -0.0944  Tc 0  Tw (yyout\222) Tj20.64 0  TD -0.0464  Tc -0.0353  Tw (is the file to which `ECHO' actions are ) Tj-41.28 -8.64  TD -0.1469  Tc 0.0653  Tw (done. ) Tj-8.16 -10.08  TD -0.12  Tc 0  Tw (\225) Tj8.16 0  TD -0.0778  Tc 0.0648  Tw (YY_START returns an integer value corresponding to ) Tj0 -8.16  TD -0.075  Tc -0.0066  Tw (the current start condition.) TjETq 1 0 0 1 6.34 6.23 cm 322.08 316.8 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 322.56 317.28 210.24 157.44 re S Q 1 1 1 rg 79.2 108 211.2 158.4 re fBT126.24 234.24  TD0 0 0 rg /F1 12.96  Tf-0.0285  Tc 0.2656  Tw (C++ lexical analyzer) Tj-29.28 -21.6  TD /F1 7.2  Tf-0.12  Tc 0  Tw (\225) Tj8.16 0  TD /F4 7.2  Tf(flex) Tj16.32 0  TD /F2 7.2  Tf-0.0666  Tc 0.065  Tw (provides two different ways to generate ) Tj-16.32 -8.64  TD -0.0927  Tc 0.0111  Tw (scanners for use with C++) Tj-8.16 -10.08  TD /F1 7.2  Tf-0.12  Tc 0  Tw (\225) Tj8.16 0  TD /F2 7.2  Tf-0.0813  Tc -0  Tw (The first way is to simply compile a scanner ) Tj0 -8.16  TD -0.0956  Tc -0.226  Tw (generated by ) Tj45.6 0  TD /F4 7.2  Tf0.12  Tc 0  Tw (flex) Tj16.8 0  TD /F2 7.2  Tf-0.093  Tc 0.0114  Tw (using a C++ compiler instead of a ) Tj-62.4 -8.64  TD -0.072  Tc -0.0096  Tw (C compiler) Tj-8.16 -10.08  TD /F1 7.2  Tf-0.12  Tc 0  Tw (\225) Tj8.16 0  TD /F2 7.2  Tf-0.0767  Tc -0.0049  Tw (You can then use C++ code in your rule actions ) Tj0 -8.64  TD -0.1205  Tc 0.0389  Tw (instead of C code) Tj2.4 -8.16  TD /F1 5.76  Tf0.1574  Tc 0  Tw (\226) Tj6.72 0  TD /F2 5.76  Tf0.0508  Tc -0.1054  Tw (Note that the default input source for your scanner remains) Tj0 -7.2  TD /F4 5.76  Tf0  Tc 0  Tw (yyin) Tj12 0  TD /F2 5.76  Tf0.0666  Tc -0.1594  Tw (, and default echoing is still done to) Tj100.32 0  TD /F4 5.76  Tf0.192  Tc 0  Tw (yyout) Tj15.84 0  TD /F2 5.76  Tf0.0267  Tc -0.068  Tw (. Both of these ) Tj-128.16 -7.2  TD 0.0522  Tc -0.2134  Tw (remain ) Tj20.64 0  TD /F4 5.76  Tf0.0686  Tc -0.0686  Tw (`FILE *') Tj25.44 0  TD /F2 5.76  Tf0.0078  Tc 0.0709  Tw (variables and not C++ ) Tj61.92 0  TD /F4 5.76  Tf0.1371  Tc 0  Tw (streams) Tj21.6 0  TD /F2 5.76  Tf-0.1613  Tc (.) TjETq 1 0 0 1 1.28 10.58 cm 79.2 107.52 211.2 158.88 re h W n 0.96 w 1 j 0 0 0 RG 79.68 108 210.24 157.92 re S Q 1 1 1 rg 322.08 108 211.2 158.4 re fBT372.48 234.24  TD0 0 0 rg /F1 12.96  Tf-0.0497  Tc 0.2868  Tw (C++ lexical ) Tj67.68 0  TD -0.0014  Tc 0  Tw (anlyzer) Tj-100.32 -22.56  TD /F1 8.16  Tf0.024  Tc (\225) Tj8.16 0  TD -0.0454  Tc 0.0569  Tw (You can also use ) Tj64.8 0  TD /F5 8.16  Tf0.24  Tc 0  Tw (flex) Tj19.68 0  TD /F1 8.16  Tf-0.0637  Tc 0.1953  Tw (to generate a C++ ) Tj-84.48 -10.08  TD -0.027  Tc 0.1585  Tw (scanner class, using the ) Tj90.24 0  TD /F5 8.16  Tf0.24  Tc 0  Tw (`) Tj4.32 0  TD (-) Tj4.32 0  TD (+') Tj11.04 0  TD /F1 8.16  Tf-0.1846  Tc (option) Tj-107.52 -10.56  TD /F1 7.2  Tf-0.1632  Tc (\226) Tj6.72 0  TD -0.0866  Tc 0.0583  Tw (This option is automatically specified if the name of ) Tj0 -8.16  TD -0.1252  Tc 0.2036  Tw (the flex executable ends in a ) Tj90.72 0  TD /F5 7.2  Tf0.24  Tc 0  Tw (`+') Tj11.52 0  TD /F1 7.2  Tf0.0213  Tc -0.1029  Tw (, such as ) Tj29.76 0  TD /F5 7.2  Tf0  Tc 0  Tw (flex++) Tj-149.28 -11.52  TD /F1 8.16  Tf0.024  Tc (\225) Tj8.16 0  TD -0.0379  Tc 0.238  Tw (When using this option, flex defaults to ) Tj0 -10.08  TD -0.0259  Tc 0.3174  Tw (generating the scanner to the file `) Tj124.8 0  TD 0.2038  Tc 0  Tw (lex) Tj10.08 0  TD 0.1315  Tc (.) Tj2.4 0  TD 0.24  Tc (yy) Tj8.64 0  TD 0.1232  Tc -0.4717  Tw (.cc' ) Tj-145.92 -9.6  TD -0.0311  Tc 0.4026  Tw (instead of `) Tj40.8 0  TD 0.0438  Tc 0  Tw (lex) Tj9.6 0  TD 0.1315  Tc (.) Tj2.4 0  TD 0.24  Tc (yy) Tj8.64 0  TD 0.1858  Tc (.c) Tj6.72 0  TD 0.1085  Tc (\221) Tj-76.32 -12  TD 0.024  Tc (\225) Tj8.16 0  TD -0.0113  Tc 0.1428  Tw (The generated scanner includes the header file ) Tj0 -9.6  TD 0.1627  Tc 0  Tw (`) Tj2.88 0  TD -0.0869  Tc (FlexLexer) Tj35.52 0  TD -0.0271  Tc 0.2272  Tw (.h', which defines the interface to two ) Tj-38.4 -10.08  TD -0.0233  Tc 0.1548  Tw (C++ classes. ) TjETq 1 0 0 1 6.34 10.58 cm 322.08 107.52 211.2 158.88 re h W n 0.96 w 1 j 0 0 0 RG 322.56 108 210.24 157.92 re S Q endstreamendobj18 0 obj9644endobj16 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F1 8 0 R /F2 12 0 R /F4 19 0 R /F5 21 0 R >>/ProcSet 2 0 R>>/Contents 17 0 R>>endobj24 0 obj<</Length 25 0 R>>stream
1 1 1 rg 36 35.52 540.48 720.48 re fBT43.2 740.64  TD0 0 0 rg /F0 12  Tf-0.0312  Tc -0.0888  Tw (cs 445 ) Tj33.6 0  TD -0.156  Tc 0  Tw (-) Tj6.72 0  TD 0.0114  Tc -0.1314  Tw (System Program Design) Tj431.52 0  TD -0.0432  Tc 0  Tw (03/26/2002) Tj-471.84 -698.4  TD 0.0369  Tc -0.1569  Tw (John Dickinson) Tj520.32 0  TD 0.24  Tc 0  Tw (3) TjET1 1 1 rg 79.2 525.6 211.2 158.4 re fBT148.8 651.84  TD0 0 0 rg /F1 12.96  Tf-0.0983  Tc 0.3354  Tw (C++ classes) Tj-60.48 -21.6  TD /F1 8.16  Tf0.024  Tc 0  Tw (\225) Tj8.16 0  TD -0.0387  Tc 0.1703  Tw (The first class,) Tj55.2 0  TD /F5 8.16  Tf0.0267  Tc 0  Tw (FlexLexer) Tj37.44 0  TD /F1 8.16  Tf-0.0844  Tc 0.3359  Tw (, provides an abstract ) Tj-92.64 -9.12  TD -0.0201  Tc 0.2202  Tw (base class defining the general scanner class ) Tj0 -8.64  TD -0.0217  Tc 0.3132  Tw (interface. It provides the following member ) Tj0 -9.12  TD 0.0115  Tc 0.12  Tw (functions: ) Tj2.4 -8.16  TD /F1 5.76  Tf0.1574  Tc 0  Tw (\226) Tj6.72 0  TD 0.1613  Tc (\221) Tj1.44 0  TD /F5 5.76  Tf0  Tc (const char*) Tj34.56 0  TD 0.08  Tc (YYText) Tj17.76 0  TD 0  Tc (\(\)) Tj5.76 0  TD /F1 5.76  Tf0.1613  Tc (\222) Tj2.88 0  TD 0.1574  Tc (\226) Tj4.8 0  TD 0.0763  Tc -0.2376  Tw (returns the text of the most recently ) Tj-67.2 -6.24  TD 0.0841  Tc -0.2454  Tw (matched token, the equivalent of) Tj85.92 0  TD /F5 5.76  Tf0  Tc 0  Tw (yytext) Tj17.76 0  TD /F1 5.76  Tf-0.1613  Tc (. ) Tj-110.4 -7.68  TD 0.1574  Tc (\226) Tj6.72 0  TD 0.1613  Tc (\221) Tj1.44 0  TD /F5 5.76  Tf0  Tc (int YYLeng) Tj28.8 0  TD (\(\)) Tj5.76 0  TD /F1 5.76  Tf0.1613  Tc (\222) Tj2.88 0  TD 0.1574  Tc (\226) Tj4.8 0  TD 0.1028  Tc -0.204  Tw (returns the length of the most recently matched ) Tj-43.68 -6.24  TD 0.0669  Tc -0.2282  Tw (token, the equivalent of) Tj61.92 0  TD /F5 5.76  Tf0  Tc 0  Tw (yyleng) Tj17.76 0  TD /F1 5.76  Tf-0.1613  Tc (. ) Tj-86.4 -7.68  TD 0.1574  Tc (\226) Tj6.72 0  TD 0.1613  Tc (\221) Tj1.44 0  TD /F5 5.76  Tf0  Tc (int lineno) Tj28.8 0  TD 0.0686  Tc -0.0686  Tw (\(\) const) Tj23.52 0  TD /F1 5.76  Tf0.1613  Tc 0  Tw (\222) Tj2.88 0  TD 0.1574  Tc (\226) Tj4.8 0  TD 0.109  Tc -0.2702  Tw (returns the current input line number) Tj-68.16 -8.16  TD 0.1574  Tc 0  Tw (\226) Tj6.72 0  TD 0.1613  Tc (\221) Tj1.44 0  TD /F5 5.76  Tf0  Tc (void set_debug\() Tj46.56 0  TD (int) Tj11.52 0  TD 0.096  Tc -0.096  Tw (flag \)) Tj17.76 0  TD /F1 5.76  Tf0.1613  Tc 0  Tw (\222) Tj2.88 0  TD 0.1574  Tc (\226) Tj4.8 0  TD 0.0968  Tc -0.1781  Tw (sets the debugging flag for the ) Tj-84.96 -6.24  TD 0.0709  Tc -0.2322  Tw (scanner, equivalent to assigning to) Tj92.16 0  TD /F5 5.76  Tf0  Tc 0  Tw (yy) Tj5.76 0  TD (_flex_debug) Tj-104.64 -7.68  TD /F1 5.76  Tf0.1574  Tc (\226) Tj6.72 0  TD 0.1613  Tc (\221) Tj1.44 0  TD /F5 5.76  Tf0  Tc (int) Tj11.52 0  TD 0.04  Tc -0.04  Tw (debug\(\) const) Tj37.92 0  TD /F1 5.76  Tf0.1613  Tc 0  Tw (\222) Tj2.88 0  TD 0.1574  Tc (\226) Tj4.8 0  TD 0.0954  Tc -0.1881  Tw (returns the current setting of the debugging ) Tj-58.56 -6.24  TD 0.0307  Tc -0.192  Tw (flag. ) TjETq 1 0 0 1 1.28 1.88 cm 79.2 525.6 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 79.68 526.08 210.24 157.44 re S Q 1 1 1 rg 322.08 525.6 211.2 158.4 re fBT391.68 651.84  TD0 0 0 rg /F1 12.96  Tf-0.0983  Tc 0.3354  Tw (C++ classes) Tj-51.84 -22.56  TD /F1 8.16  Tf0.024  Tc 0  Tw (\225) Tj8.16 0  TD -0.0387  Tc 0.1703  Tw (The first class,) Tj55.2 0  TD /F5 8.16  Tf0.0267  Tc 0  Tw (FlexLexer) Tj37.44 0  TD /F1 8.16  Tf-0.0844  Tc 0.3359  Tw (, provides an abstract ) Tj-92.64 -10.08  TD -0.0201  Tc 0.2202  Tw (base class defining the general scanner class ) Tj0 -9.6  TD -0.0442  Tc 0  Tw (interface.) Tj-8.16 -12  TD 0.024  Tc (\225) Tj10.56 0  TD -0.0294  Tc 0.257  Tw (The second class defined in `) Tj106.56 0  TD -0.0336  Tc 0  Tw (FlexLexer) Tj36 0  TD 0.1249  Tc 0.0066  Tw (.h' is) Tj-144.96 -10.08  TD /F5 8.16  Tf0.0218  Tc 0  Tw (yyFlexLexer) Tj45.6 0  TD /F1 8.16  Tf0.0203  Tc 0.1112  Tw (, which is derived from) Tj83.52 0  TD /F5 8.16  Tf0.0267  Tc 0  Tw (FlexLexer) Tj37.44 0  TD /F1 8.16  Tf0.1315  Tc (. ) Tj-174.72 -11.52  TD 0.024  Tc (\225) Tj8.16 0  TD -0.0196  Tc 0.2045  Tw (For details on these classes you should visit  ) Tj0 -10.08  TD 0.0164  Tc 0  Tw (http://dinosaur.) Tj54.24 0  TD -0.0048  Tc (compilertools) Tj48 0  TD -0.0605  Tc (.net/flex/) TjETq 1 0 0 1 6.34 1.88 cm 322.08 525.6 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 322.56 526.08 210.24 157.44 re S Q 1 1 1 rg 79.2 316.8 211.2 158.4 re fBT108.48 443.04  TD0 0 0 rg /F1 12.96  Tf-0.0342  Tc -0.2087  Tw (Interfacing with ) Tj90.72 0  TD 0.0586  Tc 0  Tw (yacc) Tj26.4 0  TD 0.0771  Tc (/bison) Tj-128.64 -23.04  TD /F1 9.6  Tf0  Tc (\225) Tj8.16 0  TD -0.1477  Tc 0.2789  Tw (One of the main uses of ) Tj102.24 0  TD /F5 9.6  Tf0  Tc 0  Tw (flex) Tj21.6 0  TD /F1 9.6  Tf-0.2573  Tc 0.1485  Tw (is as a ) Tj-123.84 -10.08  TD -0.1817  Tc 0.3929  Tw (companion to the) Tj74.88 0  TD /F5 9.6  Tf-0.12  Tc 0  Tw (yacc) Tj21.6 0  TD /F1 9.6  Tf-0.1344  Tc (parser) Tj25.92 0  TD 0.1632  Tc (-) Tj3.36 0  TD -0.0853  Tc (generator) Tj-133.92 -12.48  TD /F5 9.6  Tf0  Tc (\225) Tj8.16 0  TD (yacc) Tj21.6 0  TD /F1 9.6  Tf-0.1163  Tc 0.0075  Tw (parsers expect to call a routine ) Tj-21.6 -10.08  TD -0.2054  Tc -0.0634  Tw (named ) Tj31.2 0  TD /F5 9.6  Tf0  Tc 0  Tw (`) Tj4.8 0  TD (yylex) Tj24 0  TD -0.16  Tc (\(\)') Tj16.32 0  TD /F1 9.6  Tf-0.1835  Tc 0.3947  Tw (to find the next input ) Tj-76.32 -10.08  TD 0.0077  Tc 0  Tw (token) Tj-8.16 -12.48  TD 0  Tc (\225) Tj8.16 0  TD -0.1491  Tc 0.1803  Tw (The simplest way is to use an include ) Tj0 -10.08  TD -0.1433  Tc 0.1945  Tw (statement in the ) Tj69.6 0  TD -0.2544  Tc 0  Tw (yacc) Tj19.2 0  TD -0.1299  Tc 0.1011  Tw (/bison file \(I\222ll show ) Tj-88.8 -10.08  TD -0.167  Tc 0.3782  Tw (an example\)) TjETq 1 0 0 1 1.28 6.23 cm 79.2 316.8 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 79.68 317.28 210.24 157.44 re S Q 1 1 1 rg 322.08 316.8 211.2 158.4 re fBT377.28 443.04  TD0 0 0 rg /F1 12.96  Tf-0.0029  Tc 0.24  Tw (Introducing Bison) Tj-37.44 -24  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj8.16 0  TD -0.151  Tc 0.2022  Tw (Bison is like ) Tj52.32 0  TD -0.1344  Tc -0.1344  Tw (yacc ) Tj22.08 0  TD -0.1686  Tc 0.2198  Tw (\(I\222d suggest using ) Tj-74.4 -11.52  TD -0.1658  Tc 0.257  Tw (bison, but if you only have access to ) Tj0 -11.04  TD -0.0144  Tc 0  Tw (yacc) Tj19.68 0  TD -0.2232  Tc 0.1144  Tw (, then use ) Tj43.2 0  TD -0.0144  Tc 0  Tw (yacc) Tj19.68 0  TD 0.1632  Tc (\)) Tj-90.72 -13.44  TD 0  Tc (\225) Tj8.16 0  TD -0.1514  Tc 0.2826  Tw (Input to Bison specifies the grammar ) Tj0 -11.52  TD -0.1639  Tc 0.3751  Tw (rules and the semantic actions) Tj-8.16 -13.44  TD 0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1571  Tc 0.3683  Tw (Often flex is used for the lexical analysis) TjETq 1 0 0 1 6.34 6.23 cm 322.08 316.8 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 322.56 317.28 210.24 157.44 re S Q 1 1 1 rg 79.2 108 211.2 158.4 re fBT113.28 234.24  TD0 0 0 rg /F1 12.96  Tf-0.0565  Tc 0.2936  Tw (General Bison file format) Tj-16.32 -20.64  TD /F1 7.2  Tf-0.12  Tc 0  Tw (\225) Tj8.16 0  TD -0.0529  Tc 0.0193  Tw (The general form of a Bison grammar file is as ) Tj0 -8.64  TD -0  Tc 0  Tw (follows:) Tj0 -12  TD /F1 5.76  Tf0.0778  Tc (%{) Tj0 -7.68  TD /F3 5.76  Tf0.0976  Tc -0.2589  Tw (C declarations) TjT* /F1 5.76  Tf0.0778  Tc 0  Tw (%}) TjT* /F3 5.76  Tf0.0931  Tc -0.2543  Tw (Bison declarations) Tj0 -8.16  TD /F1 5.76  Tf0.1594  Tc 0  Tw (%%) Tj0 -7.68  TD /F3 5.76  Tf0.0933  Tc -0.2546  Tw (Grammar rules) TjT* /F1 5.76  Tf0.1594  Tc 0  Tw (%%) TjT* /F3 5.76  Tf0.1161  Tc -0.2774  Tw (Additional C code) Tj2.4 -11.52  TD /F1 5.28  Tf-0.0557  Tc 0  Tw (\226) Tj6.72 0  TD -0.0109  Tc -0.0169  Tw (The `%%', `%{' and `%}' are punctuation that appear in every Bis) Tj150.24 0  TD -0.0557  Tc 0.0278  Tw (on ) Tj-150.24 -5.76  TD 0.0185  Tc -0.0463  Tw (grammar file to separate the sections.) TjETq 1 0 0 1 1.28 10.58 cm 79.2 107.52 211.2 158.88 re h W n 0.96 w 1 j 0 0 0 RG 79.68 108 210.24 157.92 re S Q 1 1 1 rg 322.08 108 211.2 158.4 re fBT402.24 234.24  TD0 0 0 rg /F1 12.96  Tf-0.0706  Tc 0  Tw (Example) Tj-62.4 -24  TD /F1 9.6  Tf0  Tc (\225) Tj8.16 0  TD -0.1285  Tc 0.3397  Tw (Consider the grammar) Tj12.96 -12.96  TD -0.1632  Tc -0.1056  Tw (S ) Tj9.12 0  TD /F0 9.6  Tf0.0576  Tc 0  Tw (?) Tj12 0  TD /F1 9.6  Tf0.0064  Tc -0.1552  Tw (LET  OP  A) Tj-21.12 -13.44  TD -0.1632  Tc -0.1056  Tw (A ) Tj9.12 0  TD /F0 9.6  Tf0.0576  Tc 0  Tw (?) Tj12 0  TD /F1 9.6  Tf-0.2196  Tc 0.2708  Tw (A DIG | DIG) TjETq 1 0 0 1 6.34 10.58 cm 322.08 107.52 211.2 158.88 re h W n 0.96 w 1 j 0 0 0 RG 322.56 108 210.24 157.92 re S Q endstreamendobj25 0 obj8955endobj23 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F1 8 0 R /F3 14 0 R /F5 21 0 R >>/ProcSet 2 0 R>>/Contents 24 0 R>>endobj27 0 obj<</Length 28 0 R>>stream
1 1 1 rg 36 35.52 540.48 720.48 re fBT43.2 740.64  TD0 0 0 rg /F0 12  Tf-0.0312  Tc -0.0888  Tw (cs 445 ) Tj33.6 0  TD -0.156  Tc 0  Tw (-) Tj6.72 0  TD 0.0114  Tc -0.1314  Tw (System Program Design) Tj431.52 0  TD -0.0432  Tc 0  Tw (03/26/2002) Tj-471.84 -698.4  TD 0.0369  Tc -0.1569  Tw (John Dickinson) Tj520.32 0  TD 0.24  Tc 0  Tw (4) TjET1 1 1 rg 79.2 525.6 211.2 158.4 re fBT157.92 651.84  TD0 0 0 rg /F1 12.96  Tf-0.0018  Tc 0.2389  Tw (Bison file) Tj-60.96 -24  TD /F1 9.6  Tf0  Tc 0  Tw (\225) Tj8.16 0  TD -0.1632  Tc -0.5856  Tw (In ) Tj10.56 0  TD /F2 9.6  Tf-0.0014  Tc 0  Tw (bison.y) Tj35.52 0  TD /F1 9.6  Tf-0.1337  Tc 0.1049  Tw (there would be:) Tj-33.12 -9.12  TD /F1 5.76  Tf0.0778  Tc 0  Tw (%{) Tj0 -8.16  TD (%}) Tj0 -8.64  TD 0.1091  Tc -0.2704  Tw (%token NUM, LET, OP) Tj0 -8.16  TD 0.1594  Tc 0.1594  Tw (%% ) Tj0 -8.64  TD -0.0816  Tc 0  Tw (S:) Tj42.24 0  TD 0.0518  Tc 0.1469  Tw (LET  OP  A) Tj42.24 0  TD -0.0038  Tc 0  Tw ({) Tj1.92 0  TD 0.0259  Tc (printf) Tj12.96 0  TD 0.0019  Tc (\() Tj1.92 0  TD (\223) Tj1.92 0  TD 0.0781  Tc -0.2394  Tw (Found S) Tj22.08 0  TD -0.1613  Tc 0  Tw (\\) Tj1.44 0  TD 0.1574  Tc (n) Tj3.36 0  TD 0.0019  Tc (\224) Tj1.92 0  TD 0.1056  Tc 0.2131  Tw (\);} ) Tj-132 -8.64  TD -0.1613  Tc 0  Tw (;) Tj0 -8.16  TD -0.0816  Tc (A:) Tj42.24 0  TD 0.0806  Tc -0.2419  Tw (A NUM) Tj42.24 0  TD -0.0038  Tc 0  Tw ({) Tj1.92 0  TD 0.0259  Tc (printf) Tj12.96 0  TD 0.0019  Tc (\() Tj1.92 0  TD (\223) Tj1.92 0  TD 0.1948  Tc -0.3561  Tw (Found A NUM) Tj36.96 0  TD -0.1613  Tc 0  Tw (\\) Tj1.44 0  TD 0.1574  Tc (n) Tj3.36 0  TD 0.0019  Tc (\224) Tj1.92 0  TD 0.1056  Tc 0.2131  Tw (\);} ) Tj-104.64 -8.64  TD 0.0667  Tc -0.228  Tw (| NUM ) Tj42.24 0  TD -0.0038  Tc 0  Tw ({) Tj1.92 0  TD 0.0259  Tc (printf) Tj12.96 0  TD 0.0019  Tc (\() Tj1.92 0  TD (\223) Tj1.92 0  TD 0.0994  Tc -0.2606  Tw (Found NUM) Tj31.68 0  TD -0.1613  Tc 0  Tw (\\) Tj1.44 0  TD 0.1574  Tc (n) Tj3.36 0  TD 0.0019  Tc (\224) Tj1.92 0  TD -0.0544  Tc (\);}) Tj-141.6 -8.16  TD -0.1613  Tc (;) Tj0 -8.64  TD 0.1594  Tc (%%) Tj0 -8.16  TD 0.1387  Tc 0.18  Tw (#include ) Tj24 0  TD 0.0019  Tc 0  Tw (\223) Tj1.92 0  TD 0.1062  Tc (lex) Tj7.2 0  TD -0.1613  Tc (.) Tj1.44 0  TD 0  Tc (yy) Tj5.76 0  TD -0.0806  Tc (.c) Tj4.32 0  TD 0.0019  Tc (\224) TjETq 1 0 0 1 1.28 1.88 cm 79.2 525.6 211.2 158.4 re h W n 0.96 w 1 j 0 0 0 RG 79.68 526.08 210.24 157.44 re S Q endstreamendobj28 0 obj2484endobj26 0 obj<</Type /Page/Parent 5 0 R/Resources <</Font <</F0 6 0 R /F1 8 0 R /F2 12 0 R >>/ProcSet 2 0 R>>/Contents 27 0 R>>endobj6 0 obj<</Type /Font/Subtype /TrueType/Name /F0/BaseFont /TimesNewRoman/FirstChar 32/LastChar 255/Widths [ 250 333 408 500 500 833 778 180 333 333 500 564 250 333 250 278 500 500 500 500 500 500 500 500 500 500 278 278 564 564 564 444 921 722 667 667 722 611 556 722 722 333 389 722 611 889 722 722 556 722 667 556 611 722 722 944 722 722 611 333 278 333 469 500 333 444 500 444 500 444 333 500 500 278 278 500 278 778 500 500 500 500 333 389 278 500 500 722 500 500 444 480 200 480 541 778 500 778 333 500 444 1000 500 500 333 1000 556 333 889 778 611 778 778 333 333 444 444 350 500 1000 333 980 389 333 722 778 444 722 250 333 500 500 500 500 200 500 333 760 276 500 564 333 760 500 400 549 300 300 333 576 453 250 333 300 310 500 750 750 750 444 722 722 722 722 722 722 889 667 611 611 611 611 333 333 333 333 722 722 722 722 722 722 722 564 722 722 722 722 722 722 556 500 444 444 444 444 444 444 667 444 444 444 444 444 278 278 278 278 500 500 500 500 500 500 500 549 500 500 500 500 500 500 500 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 7 0 R>>endobj7 0 obj<</Type /FontDescriptor/FontName /TimesNewRoman/Flags 34/FontBBox [ -250 -216 1160 1000 ]/MissingWidth 322/StemV 73/StemH 73/ItalicAngle 0/CapHeight 891/XHeight 446/Ascent 891/Descent -216/Leading 149/MaxWidth 967/AvgWidth 401>>endobj8 0 obj<</Type /Font/Subtype /TrueType/Name /F1/BaseFont /Arial/FirstChar 32/LastChar 255/Widths [ 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 611 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 500 667 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 9 0 R>>endobj9 0 obj<</Type /FontDescriptor/FontName /Arial/Flags 32/FontBBox [ -250 -212 1204 1000 ]/MissingWidth 274/StemV 80/StemH 80/ItalicAngle 0/CapHeight 905/XHeight 453/Ascent 905/Descent -212/Leading 150/MaxWidth 1003/AvgWidth 441>>endobj12 0 obj<</Type /Font/Subtype /TrueType/Name /F2/BaseFont /Arial,Bold/FirstChar 32/LastChar 255/Widths [ 278 333 474 556 556 889 722 238 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 333 333 584 584 584 611 975 722 722 722 722 667 611 778 722 278 556 722 611 833 722 778 667 778 722 667 611 722 667 944 667 667 611 333 278 333 584 556 333 556 611 556 611 556 333 611 611 278 278 556 278 889 611 611 611 611 389 556 333 611 556 778 556 556 500 389 280 389 584 750 556 750 278 556 500 1000 556 556 333 1000 667 333 1000 750 611 750 750 278 278 500 500 350 556 1000 333 1000 556 333 944 750 500 667 278 333 556 556 556 556 280 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 556 278 333 333 365 556 834 834 834 611 722 722 722 722 722 722 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 556 556 556 556 556 278 278 278 278 611 611 611 611 611 611 611 549 611 611 611 611 611 556 611 556 ]/Encoding /WinAnsiEncoding/FontDescriptor 13 0 R>>endobj13 0 obj<</Type /FontDescriptor/FontName /Arial,Bold/Flags 16416/FontBBox [ -250 -212 1168 1000 ]/MissingWidth 324/StemV 153/StemH 153/ItalicAngle 0/CapHeight 905/XHeight 453/Ascent 905/Descent -212/Leading 150/MaxWidth 973/AvgWidth 479>>endobj14 0 obj<</Type /Font/Subtype /TrueType/Name /F3/BaseFont /Arial,Italic/FirstChar 32/LastChar 255/Widths [ 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 556 750 222 556 333 1000 556 556 333 1000 667 333 1000 750 611 750 750 222 222 333 333 350 556 1000 333 1000 500 333 944 750 500 667 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 537 278 333 333 365 556 834 834 834 611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 15 0 R>>endobj15 0 obj<</Type /FontDescriptor/FontName /Arial,Italic/Flags 96/FontBBox [ -250 -212 1207 1000 ]/MissingWidth 275/StemV 80/StemH 80/ItalicAngle -11/CapHeight 905/XHeight 453/Ascent 905/Descent -212/Leading 150/MaxWidth 1006/AvgWidth 441>>endobj19 0 obj<</Type /Font/Subtype /TrueType/Name /F4/BaseFont /MSMincho,Bold/FirstChar 32/LastChar 255/Widths [ 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 1000 1000 1000 500 500 500 1000 1000 1000 500 1000 500 500 500 1000 500 1000 1000 1000 1000 1000 1000 500 500 500 500 500 500 500 500 1000 500 500 500 500 500 500 500 500 500 1000 1000 500 500 500 500 500 500 500 1000 1000 500 500 1000 500 1000 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 1000 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 1000 500 500 500 500 500 500 500 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 20 0 R>>endobj20 0 obj<</Type /FontDescriptor/FontName /MSMincho,Bold/Flags 16418/FontBBox [ -250 -141 1200 1000 ]/MissingWidth 500/StemV 159/StemH 159/ItalicAngle 0/CapHeight 859/XHeight 430/Ascent 859/Descent -141/Leading 0/MaxWidth 1000/AvgWidth 500>>endobj21 0 obj<</Type /Font/Subtype /TrueType/Name /F5/BaseFont /MSMincho/FirstChar 32/LastChar 255/Widths [ 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 1000 1000 1000 500 500 500 1000 1000 1000 500 1000 500 500 500 1000 500 1000 1000 1000 1000 1000 1000 500 500 500 500 500 500 500 500 1000 500 500 500 500 500 500 500 500 500 1000 1000 500 500 500 500 500 500 500 1000 1000 500 500 1000 500 1000 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 1000 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 500 1000 500 500 500 500 500 500 500 500 ]/Encoding /WinAnsiEncoding/FontDescriptor 22 0 R>>endobj22 0 obj<</Type /FontDescriptor/FontName /MSMincho/Flags 34/FontBBox [ -250 -141 1200 1000 ]/MissingWidth 500/StemV 91/StemH 91/ItalicAngle 0/CapHeight 859/XHeight 430/Ascent 859/Descent -141/Leading 0/MaxWidth 1000/AvgWidth 500>>endobj2 0 obj[ /PDF /Text  ]endobj5 0 obj<</Kids [4 0 R 16 0 R 23 0 R 26 0 R ]/Count 4/Type /Pages/MediaBox [ 0 0 612 792 ]>>endobj1 0 obj<</Creator <FEFF004D006900630072006F0073006F0066007400200050006F0077006500720050006F0069006E00740020002D0020005B0053006C00690064006500730030003300320035002E007000700074005D>/CreationDate (D:20020326084336)/Title <FEFF0053006C00690064006500730030003300320035002E005000440046>/Author <FEFF006A006F0068006E0064>/Producer (Acrobat PDFWriter 4.0 for Windows NT)>>endobj3 0 obj<</Pages 5 0 R/Type /Catalog>>endobjxref0 290000000000 65535 f 0000037076 00000 n 0000036940 00000 n 0000037456 00000 n 0000006875 00000 n 0000036971 00000 n 0000028805 00000 n 0000029894 00000 n 0000030154 00000 n 0000031239 00000 n 0000000019 00000 n 0000006854 00000 n 0000031492 00000 n 0000032583 00000 n 0000032846 00000 n 0000033940 00000 n 0000016749 00000 n 0000007029 00000 n 0000016728 00000 n 0000034203 00000 n 0000035314 00000 n 0000035579 00000 n 0000036685 00000 n 0000025947 00000 n 0000016916 00000 n 0000025926 00000 n 0000028662 00000 n 0000026102 00000 n 0000028641 00000 n trailer<</Size 29/Root 3 0 R/Info 1 0 R/ID [<1c3a59f10b03a7d7e81d0ac883901d18><1c3a59f10b03a7d7e81d0ac883901d18>]>>startxref37505%%EOF